  # %128 ~ %(128+24): Lights (25 elements)

  # %46: Initialisation counter
  # %47: Initial lux meter value

  # Initialisation
  breq %46, =40, Mf

W:  # Wait
  # No-op during the initial 400 ms,
  # waiting for an ambient illuminance reading
  add %46, =1
  breq %46, =40, If
  sc =0

I:
  # Read lux meter
  mov %47, %3
  mov %48, =8

M:  # Main
  # %48: Frame subdivision

  add %48, =1
  brlt %48, =8, Mf

  mov %48, =0
  # Shift lights by one
  # For %16 in 72 ~ 0 (inclusive)
  mov %16, =72
L:
  ld %17, %16, =128
  ld %18, %16, =129
  ld %19, %16, =130
  st %17, %16, =131
  st %18, %16, =132
  st %19, %16, =133
  sub %16, =3
  brlt %16, =72, Lb

  # New light
  # %49: Frame in animation sequence
  # %50: Subdivision in animation frame

  br Cf
A:
  data 00000014 00000000 0000000a
  data 0000001e 00000000 00000000
  data 00000014 0000000a 00000000
  data 0000000a 00000014 00000000
  data 00000000 0000001e 00000000
  data 00000000 00000014 0000000a
  data 00000000 0000000a 00000014
  data 00000000 00000000 0000001e
  data 0000000a 00000000 00000014
  data 00000014 00000000 0000000a
  # Repeat first frame

C:
  add %50, =4   # Narrower rainbow cycles
  brne %50, =8, Tf
  # Move to next frame
  mov %50, =0
  add %49, =1
  brne %49, =9, Tf
  mov %49, =0

T:  # Fetch colour from sequence
  mul %19, %49, =3
  add %19, Ab
  ldc %20, %19, =0  # Current frame
  ldc %21, %19, =1
  ldc %22, %19, =2
  ldc %23, %19, =3  # Next frame
  ldc %24, %19, =4
  ldc %25, %19, =5

  mov %26, =8
  sub %26, %50
  call Bf

  lsl %20, =3
  lsl %21, =3
  lsl %22, =3

  # Store to line
  mov %19, =128
  st %20, %19, =0
  st %21, %19, =1
  st %22, %19, =2

M:  # Move

  # Write lights buffer to output
  mov %16, =0
  mov %17, =0
  mov %18, =256
L:
  ld %20, %17, =128   # R1
  ld %21, %17, =129   # G1
  ld %22, %17, =130   # B1
  ld %23, %17, =131   # R2
  ld %24, %17, =132   # G2
  ld %25, %17, =133   # B2

  mov %26, %48
  call Bf

  # Combine into a single value and write to output area
  lsl %20, =16
  lsl %21, =8
  or %20, %21
  or %20, %22

  st %20, %16, %18

  add %16, =1
  add %17, =3
  brlt %16, =24, Lb

  sc =0

B:  # Subroutine Blend
  # Input: %20 ~ %25 (R1, G1, B1, R2, G2, B2)
  #        %26 (subdivision of 8)
  # Scratch: %27 ~ %30
  # Output: %20 ~ 25

  mov %27, =8
  sub %27, %26  # 8 - div

  # R = (R1 * div + R2 * (8 - div)), etc.
  mul %28, %20, %26
  mul %29, %23, %27
  add %20, %28, %29
  lsr %20, =3

  mul %28, %21, %26
  mul %29, %24, %27
  add %21, %28, %29
  lsr %21, =3

  mul %28, %22, %26
  mul %29, %25, %27
  add %22, %28, %29
  lsr %22, =3

  ret
